import Client = require("./Library/Client");
/**
 * The singleton meta class for the default client of the client. This class is used to setup/start and configure
 * the auto-collection behavior of the application insights module.
 */
declare class ApplicationInsights {
    static client: Client;
    private static _isConsole;
    private static _isExceptions;
    private static _isPerformance;
    private static _isRequests;
    private static _console;
    private static _exceptions;
    private static _performance;
    private static _requests;
    private static _isStarted;
    /**
     * Initializes the default client of the client and sets the default configuration
     * @param instrumentationKey the instrumentation key to use. Optional, if this is not specified, the value will be
     * read from the environment variable APPINSIGHTS_INSTRUMENTATION_KEY
     * @returns {ApplicationInsights} this class
     */
    static setup(instrumentationKey?: string): typeof ApplicationInsights;
    /**
     * Starts automatic collection of telemetry. Prior to calling start no telemetry will be collected
     * @returns {ApplicationInsights} this class
     */
    static start(): typeof ApplicationInsights;
    /**
     * Sets the state of console tracking (enabled by default)
     * @param value if true console activity will be sent to Application Insights
     * @returns {ApplicationInsights} this class
     */
    static setAutoCollectConsole(value: boolean): typeof ApplicationInsights;
    /**
     * Sets the state of exception tracking (enabled by default)
     * @param value if true uncaught exceptions will be sent to Application Insights
     * @returns {ApplicationInsights} this class
     */
    static setAutoCollectExceptions(value: boolean): typeof ApplicationInsights;
    /**
     * Sets the state of performance tracking (enabled by default)
     * @param value if true performance counters will be collected every second and sent to Application Insights
     * @returns {ApplicationInsights} this class
     */
    static setAutoCollectPerformance(value: boolean): typeof ApplicationInsights;
    /**
     * Sets the state of request tracking (enabled by default)
     * @param value if true requests will be sent to Application Insights
     * @returns {ApplicationInsights} this class
     */
    static setAutoCollectRequests(value: boolean): typeof ApplicationInsights;
    /**
     * Enables verbose debug logging
     * @returns {ApplicationInsights} this class
     */
    static enableVerboseLogging(): typeof ApplicationInsights;
}
export = ApplicationInsights;
