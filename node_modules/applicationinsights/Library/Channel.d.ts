import ContractsModule = require("./Contracts");
import Sender = require("./Sender");
declare class Channel {
    protected _buffer: string[];
    protected _lastSend: number;
    protected _timeoutHandle: any;
    protected _isDisabled: () => boolean;
    protected _getBatchSize: () => number;
    protected _getBatchIntervalMs: () => number;
    protected _sender: Sender;
    constructor(isDisabled: () => boolean, getBatchSize: () => number, getBatchIntervalMs: () => number, sender: Sender);
    /**
     * Add a telemetry item to the send buffer
     */
    send(envelope: ContractsModule.Contracts.Envelope): void;
    handleCrash(envelope: ContractsModule.Contracts.Envelope): void;
    /**
     * Immediately send buffered data
     */
    triggerSend(isNodeCrashing?: boolean): void;
    private _stringify(envelope);
}
export = Channel;
